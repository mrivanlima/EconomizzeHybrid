@page "/perfil"
@inject IUserLoginServices UserLoginServices
@inject IUserServices UserServices
@inject NavigationManager NavigationManager
@inject UserLoginSqliteServices UserLoginSqliteServices

<div class="container mt-5">
    <EditForm FormName="User" Model="@userModel" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="firstName">First Name</label>
            <InputText placeholder="Primeiro Nome (Obrigatorio)" class="form-control" @bind-Value="userModel.UserFirstName" />
            <ValidationMessage For="@(() => userModel.UserFirstName)" />
        </div>

        <div class="form-group">
            <label for="middleName">Middle Name</label>
            <InputText placeholder="Nome do meio (Nao Obrigatorio)" class="form-control" @bind-Value="userModel.UserMiddleName" />
            <ValidationMessage For="@(() => userModel.UserMiddleName)" />
        </div>

        <div class="form-group">
            <label for="lastName">Last Name</label>
            <InputText placeholder="Ultimo Nome (Obrigatorio)" class="form-control" @bind-Value="userModel.UserLastName" />
            <ValidationMessage For="@(() => userModel.UserLastName)" />
        </div>

        <div class="form-group">
            <label for="email">Email</label>
            <InputText disabled class="form-control" @bind-Value="userModel.UserEmail" type="email" />
            <ValidationMessage For="@(() => userModel.UserEmail)" />
        </div>

        <div class="form-group">
            <label for="phone">Phone Number</label>
            <InputText placeholder="Numero de telefone (Obrigatorio)" class="form-control" @bind-Value="userModel.PhoneNumber" />
            <ValidationMessage For="@(() => userModel.PhoneNumber)" />
        </div>

        <div class="form-group">
            <label for="cpf">CPF</label>
            <InputText placeholder="CPF (Nao Obrigatorio)" class="form-control" @bind-Value="userModel.Cpf" />
            <ValidationMessage For="@(() => userModel.Cpf)" />
        </div>

        <div class="form-group">
            <label for="rg">RG</label>
            <InputText placeholder="RG (Nao Obrigatorio)" class="form-control" @bind-Value="userModel.Rg" />
            <ValidationMessage For="@(() => userModel.Rg)" />
        </div>

        <div class="form-group">
            <label for="dateOfBirth">Date of Birth</label>
            <InputDate placeholder="Nascimento (Nao Obrigatorio)" class="form-control" @bind-Value="userModel.DateOfBirth" />
            <ValidationMessage For="@(() => userModel.DateOfBirth)" />
        </div>
@*         <InputNumber hidden @bind-Value="userLoginModel.UserId"></InputNumber> *@
        <button type="submit" class="btn btn-primary">Submit</button>
    </EditForm>
</div>

@code {

    private UserModel? userModel = new();
    private UserLoginModel? userLoginModel = new();

    private int UserId { get; set; }

    protected override void OnInitialized()
    {
        userLoginModel = UserLoginServices.CurrentUser;
        if (userLoginModel is null)
        {
            NavigationManager.NavigateTo("login");
        }
    }


    private async Task HandleValidSubmit()
    {
        userModel.UserId = userLoginModel.UserId;
        await UserServices.CreateUserAsync(userModel, userLoginModel.UserToken);

    }


}
